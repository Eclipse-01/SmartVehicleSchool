C251 COMPILER V5.60.0,  battery                                                            05/11/24  20:15:42  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE battery
OBJECT MODULE PLACED IN .\Out_File\battery.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\UserLibraries\battery.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEE
                    -D) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\COD
                    -E;..\USER\inc;..\USER\src;..\..\Libraries\seekfree_components;..\CODE\UserLibraries) DEBUG PRINT(.\Out_File\battery.lst)
                    - TABS(2) OBJECT(.\Out_File\battery.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,逐飞科技
    4           * All rights reserved.
    5           *
    6           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    7           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    8           *
    9           * @file          main
   10           * @company     成都逐飞科技有限公司
   11           * @author        逐飞科技(QQ790875685)
   12           * @version       查看doc内version文件 版本说明
   13           * @Software    MDK FOR C251 V5.60
   14           * @Target core   STC32F12K
   15           * @Taobao      https://seekfree.taobao.com/
   16           * @date          2023-11-18
   17           * @note        由AI生成 By JNU-FLY
   18           ********************************************************************************************************
             -************/
   19          
   20          #include "headfile.h"
   21          
   22          #define BAT_VOL_PIN ADC_P05
   23          
   24          uint16 ad_result = 0;           // 引脚电压
   25          uint32 temp;
   26          
   27          uint16 battery_voltage = 0;     // 电池电压
   28          uint16 battery_percentage = 0;  // 电池电量百分比
   29          
   30          /**
   31           * @brief 初始化电池电压检测模块
   32           * 
   33           * 该函数初始化用于电池电压检测的ADC模块。
   34           */
   35          void battery_init(void){
   36   1          adc_init(BAT_VOL_PIN, ADC_SYSclk_DIV_32);
   37   1      }
   38          
   39          /**
   40           * @brief 获取电池电压
   41           * 
   42           * 该函数通过ADC读取电池电压，并根据分压电阻计算实际电池电压。
   43           * 如果电池电压低于6.5V，将显示“LOW BATTERY”并停止电机。可以在battery.h中修改LOW_BATTERY_VOLTAGE的值为-
             -1禁用此功能
   44           * 
   45           * @return uint16 返回电池电压，单位为毫伏
   46           */
   47          uint16 get_battery_voltage(void){
   48   1          ad_result = adc_once(BAT_VOL_PIN, ADC_12BIT);
   49   1          temp = (((uint32)ad_result * 3300) / 4095);  //计算出当前adc引脚的电压 计算公式为 ad_result*VCC/ADC分
             -辨率    VCC单位为mv
   50   1          battery_voltage =  temp * 11; //根据引脚电压  和分压电阻的阻值计算电池电压 计算公司为   引脚电压*(R2+
             -R3)/R3   R3为接地端电阻
   51   1          while (battery_voltage < LOW_BATTERY_VOLTAGE){
C251 COMPILER V5.60.0,  battery                                                            05/11/24  20:15:42  PAGE 2   

   52   2              ips200_show_string(120,200,"LOW BATTERY");
   53   2              drv8701_stop(MOTOR_BOTH); //停止电机防止电池过放
   54   2              while(ENABLE_LOW_BATTERY_PROTECTION)
   55   2              delay_ms(10000); // 卡死程序防止程序启动
   56   2          }
   57   1          
   58   1          return battery_voltage;
   59   1      }
   60          
   61          uint16 get_battery_percentage(void){
   62   1          int max_voltage = 4200 * BATTERY_GROUP_NUM;
   63   1          int min_voltage = LOW_BATTERY_VOLTAGE * BATTERY_GROUP_NUM;
   64   1          int current_voltage = get_battery_voltage();
   65   1          int percentage = (current_voltage - min_voltage) * 100 / (max_voltage - min_voltage);
   66   1          if (percentage > 100){
   67   2              percentage = 100;
   68   2          }
   69   1          if (percentage < 0){
   70   2              percentage = 0;
   71   2          }
   72   1          return percentage;
   73   1      }
   74          
   75          /**
   76           * @brief 更新电池状态
   77           * 
   78           * 该函数根据当前电池电压和电量百分比更新电池状态和充电状态。
   79           */
   80          void update_battery_status(void) {
   81   1          battery_percentage = get_battery_percentage();
   82   1      }
   83          
   84          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       217     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        18     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        30     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
