C251 COMPILER V5.60.0,  battery                                                            20/11/24  18:16:19  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE battery
OBJECT MODULE PLACED IN .\Out_File\battery.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\UserLibraries\battery.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEE
                    -D) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\COD
                    -E;..\USER\inc;..\USER\src;..\..\Libraries\seekfree_components;..\CODE\UserLibraries;..\CODE\Algorithms) DEBUG PRINT(.\Ou
                    -t_File\battery.lst) TABS(2) OBJECT(.\Out_File\battery.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,逐飞科技
    4           * All rights reserved.
    5           *
    6           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    7           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    8           *
    9           * @file          main
   10           * @company     成都逐飞科技有限公司
   11           * @author        逐飞科技(QQ790875685)
   12           * @version       查看doc内version文件 版本说明
   13           * @Software    MDK FOR C251 V5.60
   14           * @Target core   STC32F12K
   15           * @Taobao      https://seekfree.taobao.com/
   16           * @date          2023-11-18
   17           * @note        由AI生成 By JNU-FLY
   18           ********************************************************************************************************
             -************/
   19          
   20          #include "headfile.h"
   21          
   22          #define BAT_VOL_PIN ADC_P05
   23          #define BEEP P32
   24          
   25          uint16 ad_result = 0;           // 引脚电压
   26          uint32 temp;
   27          
   28          uint16 battery_voltage = 0;     // 电池电压
   29          uint16 battery_percentage = 0;  // 电池电量百分比
   30          
   31          /**
   32           * @brief 初始化蜂鸣器
   33           *
   34           * 该函数将 P3.2 引脚配置为推挽输出模式，用于控制蜂鸣器。
   35           */
   36          void Beep_init(void){
   37   1          gpio_mode(P3_2,GPO_PP); // 将P6.7设置为推挽输出
   38   1          P32 = 0;  // 初始化为低电平
   39   1      }
   40          
   41          /**
   42           * @brief 设置蜂鸣器状态
   43           * 
   44           * 该函数用于设置蜂鸣器状态。
   45           * 
   46           * @param status 蜂鸣器状态，0为关闭，1为打开
   47           */
   48          void Beep_set(uint8 status){
   49   1          P32 = status;
   50   1      }
   51          
   52          /**
   53           * @brief 初始化电池电压检测模块
   54           * 
C251 COMPILER V5.60.0,  battery                                                            20/11/24  18:16:19  PAGE 2   

   55           * 该函数初始化用于电池电压检测的ADC模块。
   56           */
   57          void battery_init(void){
   58   1          adc_init(BAT_VOL_PIN, ADC_SYSclk_DIV_32);
   59   1      }
   60          
   61          /**
   62           * @brief 获取电池电压
   63           * 
   64           * 该函数通过ADC读取电池电压，并根据分压电阻计算实际电池电压。
   65           * 如果电池电压低于6.5V，将显示“LOW BATTERY”并停止电机。可以在battery.h中修改LOW_BATTERY_VOLTAGE的值为-
             -1禁用此功能
   66           * 
   67           * @return uint16 返回电池电压，单位为毫伏
   68           */
   69          uint16 get_battery_voltage(void){
   70   1          ad_result = adc_once(BAT_VOL_PIN, ADC_12BIT);
   71   1          temp = (((uint32)ad_result * 3300) / 4095);  //计算出当前adc引脚的电压 计算公式为 ad_result*VCC/ADC分
             -辨率    VCC单位为mv
   72   1          battery_voltage =  temp * 11; //根据引脚电压  和分压电阻的阻值计算电池电压 计算公司为   引脚电压*(R2+
             -R3)/R3   R3为接地端电阻
   73   1          while (battery_voltage < LOW_BATTERY_VOLTAGE){
   74   2              ips200_show_string(120,200,"LOW BATTERY");
   75   2              drv8701_stop(MOTOR_BOTH); //停止电机防止电池过放
   76   2              while(ENABLE_LOW_BATTERY_PROTECTION)
   77   2              delay_ms(10000); // 卡死程序防止程序启动
   78   2          }
   79   1          
   80   1          return battery_voltage;
   81   1      }
   82          
   83          uint16 get_battery_percentage(void){
   84   1          int max_voltage = 4200 * BATTERY_GROUP_NUM;
   85   1          int min_voltage = LOW_BATTERY_VOLTAGE * BATTERY_GROUP_NUM;
   86   1          int current_voltage = get_battery_voltage();
   87   1          int percentage = (current_voltage - min_voltage) * 100 / (max_voltage - min_voltage);
   88   1          if (percentage > 100){
   89   2              percentage = 100;
   90   2          }
   91   1          if (percentage < 0){
   92   2              percentage = 0;
   93   2          }
   94   1          return percentage;
   95   1      }
   96          
   97          /**
   98           * @brief 更新电池状态
   99           * 
  100           * 该函数根据当前电池电压和电量百分比更新电池状态和充电状态。
  101           */
  102          void update_battery_status(void) {
  103   1          battery_percentage = get_battery_percentage();
  104   1      }
  105          
  106          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       246     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        19     ------
C251 COMPILER V5.60.0,  battery                                                            20/11/24  18:16:19  PAGE 3   

  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        30     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
