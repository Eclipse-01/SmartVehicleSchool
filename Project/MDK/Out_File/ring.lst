C251 COMPILER V5.60.0,  ring                                                               20/11/24  19:22:33  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE ring
OBJECT MODULE PLACED IN .\Out_File\ring.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\Algorithms\ring.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED) BRO
                    -WSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;..\U
                    -SER\inc;..\USER\src;..\..\Libraries\seekfree_components;..\CODE\UserLibraries;..\CODE\Algorithms) DEBUG PRINT(.\Out_File
                    -\ring.lst) TABS(2) OBJECT(.\Out_File\ring.obj) 

stmt  level    source

    1          #include "headfile.h"
    2          #include "ring.h"
    3          
    4          #define DISTANCE 7000 //触发入环信号到入环的距离
    5          #define RETURN_TRACK 13000 //入环后恢复循迹前的距离
    6          #define SERVO_ENTER_RING_ANGLE -39 //舵机打角
    7          
    8          uint8 RING_FLAG = 0; // 定义外部变量
    9          
   10          void ring_handler(void){
   11   1          uint32 distance = 0;
   12   1          uint32 normal_distance = 0;
   13   1          uint32 real_distance = 0;
   14   1          char str[64];
   15   1          clear_encoder_distance();
   16   1          normal_distance = get_encoder_distance();
   17   1          sprintf(str, "Normal distance: %d\n", normal_distance);
   18   1          wireless_uart_send_buff(str, strlen(str));
   19   1      
   20   1          while ( real_distance < DISTANCE ) // 判断是否到达入环点
   21   1          {
   22   2              sprintf(str, "Distance: %d\n", distance - normal_distance);
   23   2              wireless_uart_send_buff(str, strlen(str));
   24   2              distance = get_encoder_distance();
   25   2              real_distance = distance - normal_distance;
   26   2              PID_control_ring();
   27   2              delay_ms(10);
   28   2          }
   29   1          wireless_uart_send_buff("We have reached the ring point, setting servo angle\n", 52);
   30   1          servo_set_position(SERVO_ENTER_RING_ANGLE); // 舵机打角
   31   1          while ( distance - normal_distance < RETURN_TRACK ) // 判断是否到达入环后恢复循迹前的距离
   32   1          {
   33   2              distance = get_encoder_distance();
   34   2              real_distance = distance - normal_distance;
   35   2              delay_ms(10);
   36   2          }
   37   1          wireless_uart_send_buff("Ring enterance operation finished\n", 36);
   38   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       247     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        77     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
C251 COMPILER V5.60.0,  ring                                                               20/11/24  19:22:33  PAGE 2   

  hconst size          =       128     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
