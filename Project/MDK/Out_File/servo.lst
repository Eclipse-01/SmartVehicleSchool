C251 COMPILER V5.60.0,  servo                                                              20/11/24  18:16:19  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE servo
OBJECT MODULE PLACED IN .\Out_File\servo.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\UserLibraries\servo.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEED)
                    - BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\CODE;
                    -..\USER\inc;..\USER\src;..\..\Libraries\seekfree_components;..\CODE\UserLibraries;..\CODE\Algorithms) DEBUG PRINT(.\Out_
                    -File\servo.lst) TABS(2) OBJECT(.\Out_File\servo.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留???飞科技的版权声明。
    9           *
   10           * @file          main
   11           * @company   成都逐飞科技有限公司
   12           * @author        逐飞科技(QQ790875685)
   13           * @version       查看doc内version文件 版本说明
   14           * @Software    MDK FOR C251 V5.60
   15           * @Target core   STC32F12K
   16           * @Taobao      https://seekfree.taobao.com/
   17           * @date          2020-12-18
   18           ********************************************************************************************************
             -************/
   19          
   20          #include "headfile.h"
   21          #include "servo.h"
   22          
   23          /*
   24           * 关于内核频率的设定，可以查看board.h文件
   25           * 在board_init中,已经将P54引脚设置为复位
   26           * 如果需要使用P54引脚,可以在board.c文件中的board_init()函数中删除SET_P54_RESRT即可
   27           */
   28          
   29          int8 servo_position = 0;  // 舵机位置
   30          
   31          // 定义Kp和Kd参数
   32          float servo_Kp = 1.0f;
   33          float servo_Kd = 0.1f;
   34          
   35          // 定义前一次的误差
   36          static int16 previous_error = 0;
   37          
   38          /**
   39           *@brief  舵机初始化
   40           *@note   要调节初始化的位置，可以修改Center的值
   41           */
   42          void servo_init(void)
   43          {
   44   1          uint32 duty = Servo_Center; // 初始化为中间位置，宏定义了占空比
   45   1          pwm_init(PWMB_CH3_P33, 50, duty);            // PWM频率是50Hz，即20ms。
   46   1      }
   47          
   48          /**
   49           * @brief 将舵机设置到指定角度。
   50           *
   51           * 此函数接受一个以度为单位的角度，并将舵机调整到相应的位置。
   52           * 角度应在舵机支持的有效范围内，见MaxAngle的宏定义。
   53           *
   54           * @param angle 要设置的舵机角度，以占空比为单位。
C251 COMPILER V5.60.0,  servo                                                              20/11/24  18:16:19  PAGE 2   

   55           */
   56          void servo_set_position(int16 angle)
   57          {
   58   1          uint32 pulseWide = Servo_Center;
   59   1          if (angle > Servo_MaxAngle)
   60   1          {
   61   2              angle = Servo_MaxAngle;
   62   2          }
   63   1          if (angle < -Servo_MaxAngle)
   64   1          {
   65   2              angle = -Servo_MaxAngle;
   66   2          }
   67   1          pulseWide = (Servo_Center + angle);
   68   1          pwm_duty(PWMB_CH3_P33, pulseWide);
   69   1          servo_position = angle;
   70   1      }
   71          
   72          
   73          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       114     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        21     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        27     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
