C251 COMPILER V5.60.0,  encoder                                                            18/11/24  22:53:53  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE encoder
OBJECT MODULE PLACED IN .\Out_File\encoder.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE ..\CODE\UserLibraries\encoder.c XSMALL WARNINGLEVEL(3) OPTIMIZE(0,SPEE
                    -D) BROWSE INCDIR(..\..\Libraries\libraries;..\..\Libraries\seekfree_libraries;..\..\Libraries\seekfree_peripheral;..\COD
                    -E;..\USER\inc;..\USER\src;..\..\Libraries\seekfree_components;..\CODE\UserLibraries;..\CODE\Algorithms) DEBUG PRINT(.\Ou
                    -t_File\encoder.lst) TABS(2) OBJECT(.\Out_File\encoder.obj) 

stmt  level    source

    1          /********************************************************************************************************
             -*************
    2           * COPYRIGHT NOTICE
    3           * Copyright (c) 2020,逐飞科技
    4           * All rights reserved.
    5           * 技术讨论QQ群：一群：179029047(已满)  二群：244861897(已满)  三群：824575535
    6           *
    7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
    8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
    9           *
   10           * @file          main
   11           * @company       成都逐飞科技有限公司
   12           * @author        逐飞科技(QQ790875685)
   13           * @version       查看doc内version文件 版本说明
   14           * @Software    MDK FOR C251 V5.60
   15           * @Target core   STC32
   16           * @Taobao      https://seekfree.taobao.com/
   17           * @date          2023-07-27
   18          
   19           ********************************************************************************************************
             -************/
   20          
   21          #include "headfile.h"
   22          
   23          static uint16 TravelDistanceL = 0, TravelDistanceR = 0, TravelDistance = 0;
   24          
   25          /**
   26           * @brief 初始化编码器
   27           * 
   28           * 初始化编码器1和编码器2的计数引脚和方向引脚
   29           */
   30          void encoder_init(void)
   31          {
   32   1          // 初始化编码器1，引脚CTIM0_P34（LSB1），方向引脚P35（DIR1）
   33   1          ctimer_count_init(CTIM0_P34);
   34   1          // 初始化编码器2，引脚CTIM3_P04（LSB2），方向引脚P53（DIR2）
   35   1          ctimer_count_init(CTIM3_P04);
   36   1      }
   37          
   38          /**
   39           * @brief 读取编码器1的值
   40           * 
   41           * 清除计数器，延时后根据方向引脚读取编码器1的计数值
   42           * 
   43           * @return int16 编码器1的计数值
   44           */
   45          int16 encoder_read1(void)
   46          {
   47   1          int16 dat;
   48   1          if(P35 == 1) // DIR1 注意出于安装原因，左侧编码器方向与右侧编码器方向相反
   49   1          {
   50   2              dat = ctimer_count_read(CTIM0_P34);
   51   2          }
   52   1          else
   53   1          {
   54   2              dat = -ctimer_count_read(CTIM0_P34);
C251 COMPILER V5.60.0,  encoder                                                            18/11/24  22:53:53  PAGE 2   

   55   2          }
   56   1          TravelDistanceL += dat;
   57   1          ctimer_count_clean(CTIM0_P34);
   58   1          delay_ms(encoder_time);
   59   1          if(P35 == 1) // DIR1 注意出于安装原因，左侧编码器方向与右侧编码器方向相反
   60   1          {
   61   2              dat = ctimer_count_read(CTIM0_P34);
   62   2          }
   63   1          else
   64   1          {
   65   2              dat = -ctimer_count_read(CTIM0_P34);
   66   2          }
   67   1          TravelDistanceL += dat;
   68   1          return dat;
   69   1      }
   70          
   71          /**
   72           * @brief 读取编码器2的值
   73           * 
   74           * 清除计数器，延时后根据方向引脚读取编码器2的计数值
   75           * 
   76           * @return int16 编码器2的计数值
   77           */
   78          int16 encoder_read2(void)
   79          {
   80   1          int16 dat;
   81   1          if(P53 == 0) // DIR2
   82   1          {
   83   2              dat = ctimer_count_read(CTIM3_P04);
   84   2          }
   85   1          else
   86   1          {
   87   2              dat = -ctimer_count_read(CTIM3_P04);
   88   2          }
   89   1          TravelDistanceR += dat;
   90   1          ctimer_count_clean(CTIM3_P04);
   91   1          delay_ms(encoder_time);
   92   1          if(P53 == 0) // DIR2
   93   1          {
   94   2              dat = ctimer_count_read(CTIM3_P04);
   95   2          }
   96   1          else
   97   1          {
   98   2              dat = -ctimer_count_read(CTIM3_P04);
   99   2          }
  100   1          TravelDistanceR += dat;
  101   1          return dat;
  102   1      }
  103          
  104          /**
  105           * @brief 获取平均行驶距离
  106           * 
  107           * 计算左侧和右侧编码器的平均行驶距离
  108           * 
  109           * @return int16 平均行驶距离
  110           */
  111          int16 get_encoder_distance(void)
  112          {
  113   1          encoder_read1();
  114   1          encoder_read2();//更新左右编码器的行驶距离
  115   1          TravelDistance = (TravelDistanceL + TravelDistanceR) / 2;
  116   1          return TravelDistance;
  117   1      }
  118          
  119          /**
  120           * @brief 清除编码器行驶距离
C251 COMPILER V5.60.0,  encoder                                                            18/11/24  22:53:53  PAGE 3   

  121           * 
  122           * 将左侧、右侧和总行驶距离清零
  123           */
  124          void clear_encoder_distance(void)
  125          {
  126   1          TravelDistanceL = 0;
  127   1          TravelDistanceR = 0;
  128   1          TravelDistance = 0;
  129   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       295     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =        10     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =        18     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
